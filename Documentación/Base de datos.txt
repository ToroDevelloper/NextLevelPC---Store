-- BASE DE DATOS MEJORADA Y SIMPLIFICADA

CREATE DATABASE IF NOT EXISTS sistema_gestion
  DEFAULT CHARACTER SET = utf8mb4
  DEFAULT COLLATE = utf8mb4_unicode_ci;
USE sistema_gestion;

-- ==========================================================
-- ROLES
-- ==========================================================
CREATE TABLE roles (
  id INT AUTO_INCREMENT PRIMARY KEY,
  nombre VARCHAR(50) NOT NULL UNIQUE,
  descripcion VARCHAR(255),
  created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;

INSERT IGNORE INTO roles (nombre) VALUES
  ('Administrador'),
  ('Empleado'),
  ('Cliente');

-- ==========================================================
-- CATEGORIAS
-- ==========================================================
CREATE TABLE categorias (
  id INT AUTO_INCREMENT PRIMARY KEY,
  nombre VARCHAR(100) NOT NULL UNIQUE,
  tipo ENUM('Producto','Servicio') DEFAULT 'Producto',
  estado ENUM('Activo','Inactivo') DEFAULT 'Activo'
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;

INSERT IGNORE INTO categorias (nombre, tipo) VALUES
  ('Periferico', 'Producto'),
  ('Repuesto', 'Producto'),
  ('Accesorio', 'Producto'),
  ('Componente', 'Producto'),
  ('Ensamblaje', 'Servicio'),
  ('Mantenimiento', 'Servicio'),
  ('Reparación', 'Servicio');

-- ==========================================================
-- USUARIOS
-- ==========================================================
CREATE TABLE usuarios (
  id INT AUTO_INCREMENT PRIMARY KEY,
  nombre VARCHAR(100) NOT NULL,
  apellido VARCHAR(100) NOT NULL,
  cedula VARCHAR(50) UNIQUE,
  celular VARCHAR(20),
  correo VARCHAR(150) NOT NULL UNIQUE,
  hash_password VARCHAR(255) NOT NULL,
  rol_id INT NOT NULL,
  estado ENUM('Activo','Inactivo') DEFAULT 'Activo',
  created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
  updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
  FOREIGN KEY (rol_id) REFERENCES roles(id)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;

-- ==========================================================
-- DIRECCIONES
-- ==========================================================
CREATE TABLE direcciones (
  id INT AUTO_INCREMENT PRIMARY KEY,
  usuario_id INT,
  alias VARCHAR(100),
  direccion TEXT,
  ciudad VARCHAR(100),
  departamento VARCHAR(100),
  pais VARCHAR(100) DEFAULT 'Colombia',
  telefono VARCHAR(20),
  created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
  FOREIGN KEY (usuario_id) REFERENCES usuarios(id)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;

-- ==========================================================
-- PRODUCTOS
-- ==========================================================
CREATE TABLE productos (
  id INT AUTO_INCREMENT PRIMARY KEY,
  sku VARCHAR(100) UNIQUE,
  nombre VARCHAR(200) NOT NULL,
  marca VARCHAR(100),
  modelo VARCHAR(100),
  categoria_id INT NOT NULL,
  descripcion TEXT,
  imagenes JSON,
  atributos JSON,
  precio_actual DECIMAL(12,2) NOT NULL DEFAULT 0.00,
  impuesto_porcentaje DECIMAL(5,2) DEFAULT 19.00, -- Simplificado de JSON a decimal
  garantia VARCHAR(100),
  activo TINYINT(1) DEFAULT 1,
  created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
  updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
  FOREIGN KEY (categoria_id) REFERENCES categorias(id)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;

CREATE INDEX idx_productos_nombre ON productos(nombre);

-- ==========================================================
-- SERVICIOS
-- ==========================================================
CREATE TABLE servicios (
  id INT AUTO_INCREMENT PRIMARY KEY,
  nombre VARCHAR(200) NOT NULL, -- Mejor que solo 'tipo'
  categoria_id INT NOT NULL,
  descripcion TEXT,
  precio DECIMAL(12,2) NOT NULL,
  duracion_estimada INT COMMENT 'Duración en horas',
  created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
  FOREIGN KEY (categoria_id) REFERENCES categorias(id)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;

-- ==========================================================
-- UBICACIONES
-- ==========================================================
CREATE TABLE ubicaciones (
  id INT AUTO_INCREMENT PRIMARY KEY,
  nombre VARCHAR(150) NOT NULL,
  direccion TEXT,
  notas TEXT,
  created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;

-- ==========================================================
-- INVENTARIO
-- ==========================================================
CREATE TABLE inventarios (
  id INT AUTO_INCREMENT PRIMARY KEY,
  producto_id INT NOT NULL,
  ubicacion_id INT,
  stock INT DEFAULT 0,
  stock_min INT DEFAULT 0,
  reservado INT DEFAULT 0,
  lote_serial VARCHAR(200),
  costo_promedio DECIMAL(12,2) DEFAULT 0.00,
  updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
  UNIQUE KEY ux_producto_ubicacion (producto_id, ubicacion_id),
  FOREIGN KEY (producto_id) REFERENCES productos(id),
  FOREIGN KEY (ubicacion_id) REFERENCES ubicaciones(id)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;

-- ==========================================================
-- EQUIPOS
-- ==========================================================
CREATE TABLE equipos (
  id INT AUTO_INCREMENT PRIMARY KEY,
  cliente_id INT,
  tipo VARCHAR(100),
  marca VARCHAR(100),
  modelo VARCHAR(100),
  serial VARCHAR(150) UNIQUE,
  cpu VARCHAR(200),
  ram VARCHAR(100),
  almacenamiento VARCHAR(200),
  gpu VARCHAR(200),
  psu VARCHAR(100),
  notas TEXT,
  accesorios JSON,
  created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
  updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
  FOREIGN KEY (cliente_id) REFERENCES usuarios(id)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;

-- ==========================================================
-- ORDENES
-- ==========================================================
CREATE TABLE ordenes (
  id INT AUTO_INCREMENT PRIMARY KEY,
  cliente_id INT NOT NULL,
  tipo ENUM('Venta','Servicio') NOT NULL, -- Define si es venta de productos o servicio técnico
  numero_orden VARCHAR(50) UNIQUE, -- Número único de orden/factura
  subtotal DECIMAL(12,2) DEFAULT 0.00,
  impuestos DECIMAL(12,2) DEFAULT 0.00,
  envio DECIMAL(12,2) DEFAULT 0.00,
  descuento DECIMAL(12,2) DEFAULT 0.00,
  total DECIMAL(12,2) DEFAULT 0.00,

  -- Estados unificados
  estado_orden ENUM('Pendiente','Confirmada','En Proceso','Enviado','Entregado','Completada','Cancelada') DEFAULT 'Pendiente',
  estado_pago ENUM('Pendiente','Pagado','Fallido','Reembolsado') DEFAULT 'Pendiente',

  -- Información de envío y pago
  direccion_envio_id INT,
  metodo_pago ENUM('Efectivo','Tarjeta','Transferencia','ContraEntrega','Otro'),
  referencia_pago VARCHAR(255),

  -- Relación con servicio (si aplica)
  orden_servicio_id INT NULL,

  fechahora_entrega DATETIME NULL,
  notas TEXT,

  created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
  updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,

  FOREIGN KEY (cliente_id) REFERENCES usuarios(id),
  FOREIGN KEY (direccion_envio_id) REFERENCES direcciones(id)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;

-- ==========================================================
-- ORDEN_ITEMS
-- ==========================================================
CREATE TABLE orden_items (
  id INT AUTO_INCREMENT PRIMARY KEY,
  orden_id INT NOT NULL,
  tipo ENUM('Producto','Servicio') NOT NULL,
  producto_id INT NULL,
  servicio_id INT NULL,
  descripcion VARCHAR(255) NOT NULL,
  cantidad INT DEFAULT 1,
  precio_unitario DECIMAL(12,2) NOT NULL,
  descuento DECIMAL(12,2) DEFAULT 0.00,
  impuesto_porcentaje DECIMAL(5,2) DEFAULT 0.00,
  subtotal DECIMAL(12,2) NOT NULL,
  created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,

  FOREIGN KEY (orden_id) REFERENCES ordenes(id) ON DELETE CASCADE,
  FOREIGN KEY (producto_id) REFERENCES productos(id),
  FOREIGN KEY (servicio_id) REFERENCES servicios(id)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;

-- ==========================================================
-- ORDENES_SERVICIO
-- ==========================================================
CREATE TABLE ordenes_servicio (
  id INT AUTO_INCREMENT PRIMARY KEY,
  cliente_id INT NOT NULL,
  equipo_id INT,
  orden_id INT UNIQUE, -- Relación 1:1 con la orden de pago
  tipo_servicio VARCHAR(100),
  prioridad ENUM('Baja','Normal','Alta') DEFAULT 'Normal',
  estado ENUM('Recibido','Diagnóstico','Cotizado','Aprobado','En Reparación','Completado','Entregado','Cancelado') DEFAULT 'Recibido',
  descripcion_problema TEXT,
  diagnostico TEXT,
  notas_tecnicas TEXT,

  -- Fechas importantes
  fecha_entrega_estimada DATE,
  fecha_entrega_real DATETIME,

  created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
  updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,

  FOREIGN KEY (cliente_id) REFERENCES usuarios(id),
  FOREIGN KEY (equipo_id) REFERENCES equipos(id),
  FOREIGN KEY (orden_id) REFERENCES ordenes(id)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;

-- ==========================================================
-- COTIZACIONES
-- ==========================================================
CREATE TABLE cotizaciones (
  id INT AUTO_INCREMENT PRIMARY KEY,
  orden_servicio_id INT NOT NULL,
  total DECIMAL(12,2) DEFAULT 0.00,
  vigencia DATE,
  estado ENUM('Borrador','Enviada','Aceptada','Rechazada') DEFAULT 'Borrador',
  aprobado_por_id INT NULL, -- Simplificado: solo el campo, no tabla separada
  fecha_aprobacion DATETIME NULL,
  created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,

  FOREIGN KEY (orden_servicio_id) REFERENCES ordenes_servicio(id),
  FOREIGN KEY (aprobado_por_id) REFERENCES usuarios(id)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;

CREATE TABLE cotizacion_items (
  id INT AUTO_INCREMENT PRIMARY KEY,
  cotizacion_id INT NOT NULL,
  tipo ENUM('Producto','Servicio') NOT NULL,
  producto_id INT NULL,
  servicio_id INT NULL,
  descripcion VARCHAR(255),
  cantidad INT DEFAULT 1,
  precio DECIMAL(12,2) NOT NULL,
  subtotal DECIMAL(12,2) NOT NULL,

  FOREIGN KEY (cotizacion_id) REFERENCES cotizaciones(id) ON DELETE CASCADE,
  FOREIGN KEY (producto_id) REFERENCES productos(id),
  FOREIGN KEY (servicio_id) REFERENCES servicios(id)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;

-- ==========================================================
-- PRUEBAS
-- ==========================================================
CREATE TABLE pruebas (
  id INT AUTO_INCREMENT PRIMARY KEY,
  orden_servicio_id INT NOT NULL,
  nombre_prueba VARCHAR(100) NOT NULL,
  resultado ENUM('Aprobado','Reprobado','Inconcluso') DEFAULT 'Inconcluso',
  detalles TEXT,
  parametros JSON,
  capturas JSON,
  tecnico_id INT NOT NULL,
  created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,

  FOREIGN KEY (orden_servicio_id) REFERENCES ordenes_servicio(id),
  FOREIGN KEY (tecnico_id) REFERENCES usuarios(id)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;

-- ==========================================================
-- TICKETS
-- ==========================================================
CREATE TABLE tickets (
  id INT AUTO_INCREMENT PRIMARY KEY,
  cliente_id INT,
  categoria VARCHAR(100),
  asunto VARCHAR(200) NOT NULL,
  prioridad ENUM('Baja','Media','Alta') DEFAULT 'Media',
  estado ENUM('Abierto','En Progreso','Resuelto','Cerrado') DEFAULT 'Abierto',
  created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
  updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,

  FOREIGN KEY (cliente_id) REFERENCES usuarios(id)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;

CREATE TABLE ticket_mensajes (
  id INT AUTO_INCREMENT PRIMARY KEY,
  ticket_id INT NOT NULL,
  usuario_id INT NOT NULL,
  mensaje TEXT NOT NULL,
  adjuntos JSON,
  es_interno BOOLEAN DEFAULT FALSE,
  created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,

  FOREIGN KEY (ticket_id) REFERENCES tickets(id) ON DELETE CASCADE,
  FOREIGN KEY (usuario_id) REFERENCES usuarios(id)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;

-- ==========================================================
-- ÍNDICES RECOMENDADOS
-- ==========================================================
CREATE INDEX idx_ordenes_cliente_estado ON ordenes(cliente_id, estado_orden);
CREATE INDEX idx_ordenes_fecha ON ordenes(created_at);
CREATE INDEX idx_orden_items_orden ON orden_items(orden_id);
CREATE INDEX idx_ordenes_servicio_estado ON ordenes_servicio(estado);
CREATE INDEX idx_tickets_estado ON tickets(estado);
CREATE INDEX idx_ticket_mensajes_ticket ON ticket_mensajes(ticket_id, created_at);
CREATE INDEX idx_inventario_producto ON inventarios(producto_id);
CREATE INDEX idx_productos_activo ON productos(activo);

-- ==========================================================
-- VISTAS ÚTILES
-- ==========================================================
CREATE VIEW vista_inventario AS
SELECT
  p.id,
  p.sku,
  p.nombre,
  p.marca,
  p.modelo,
  c.nombre as categoria,
  p.precio_actual,
  COALESCE(SUM(i.stock), 0) as stock_total,
  COALESCE(SUM(i.reservado), 0) as reservado_total,
  (COALESCE(SUM(i.stock), 0) - COALESCE(SUM(i.reservado), 0)) as disponible
FROM productos p
LEFT JOIN inventarios i ON p.id = i.producto_id
LEFT JOIN categorias c ON p.categoria_id = c.id
WHERE p.activo = 1
GROUP BY p.id;

CREATE VIEW vista_ordenes_detalladas AS
SELECT
  o.id,
  o.numero_orden,
  o.tipo,
  o.estado_orden,
  o.estado_pago,
  o.total,
  CONCAT(u.nombre, ' ', u.apellido) as cliente,
  o.created_at
FROM ordenes o
JOIN usuarios u ON o.cliente_id = u.id;